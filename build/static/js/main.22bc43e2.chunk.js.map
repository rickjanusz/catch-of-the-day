{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","gotoStore","e","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","console","log","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","Fish","details","src","alt","addToOrder","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.22bc43e2.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  gotoStore = (e) => {\n    //1. Stop the form from submitting\n    e.preventDefault();\n    //2. Get the text from the input\n    const storeName = this.myInput.current.value;\n    //3. Change the URL loc to /store/whatevs-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.gotoStore}>\n        <h2>Please Enter a Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store &gt;</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <div className=\"ofThe\">\n        <div className=\"of\">of </div>\n        <div className=\"the\">the </div>\n      </div>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport {\n  TransitionGroup,\n  CSSTransition,\n} from 'react-transition-group';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n    if (!fish) {\n      return null;\n    }\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count} </span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name} {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order\">\n        <h2> Order </h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong> {formatPrice(total)} </strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = (e) => {\n    //Stop the form from submitting\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n\n    this.props.addFish(fish);\n    // refresh form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input\n          name=\"name\"\n          ref={this.nameRef}\n          type=\"text\"\n          placeholder=\"Name\"\n        />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          ref={this.descRef}\n          placeholder=\"Desc\"\n        ></textarea>\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  };\n\n  handleChange = (e) => {\n    // console.log(e);\n    // update the fish\n    //1. take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [e.currentTarget.name]: e.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          type=\"text\"\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        ></textarea>\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button\n          onClick={() => this.props.deleteFish(this.props.index)}\n        >\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>Log in with GitHub</button>\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log in with Twitter</button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log in with Facebook</button>\n  </nav>\n);\n\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyDMQzw-h5bzFSeXtA_Q5z347U7rp6mv0Yo\",\n    authDomain: \"catch-of-the-day-7dace.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-7dace.firebaseio.com\",\n  });\n\n  const base = Rebase.createClass(firebaseApp.database());\n\n  // This is a named export\n  export { firebaseApp };\n\n  // This is a default export\n  export default base;","import React from 'react';\nimport firebase from 'firebase';\nimport PropTypes from 'prop-types';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({ user })\n      }\n    })\n  }\n\n  authHandler = async(authData) => {\n    console.log(authData);\n    // 1. look up current store in the Firebase db\n    const store = await base.fetch(this.props.storeId, { context: this});\n    console.log(store);\n    // 2. Claim if there is no owner\n    if(!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n\n  }\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  \n  }\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({uid:null});\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Logout</button>\n    // 1. check if they are logged in\n    if(!this.state.uid) {\n      return <Login authenticate={this.authenticate}/>;\n    }\n\n    // 2. check if they are not the owner of the store\n    if(this.state.uid !== this.state.owner) {\n      return (\n         <div>\n           Sorry, you are not the owner of the store.\n           {logout}\n         </div>\n        );\n    }\n\n    // 3. they must be the owner- render inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n           {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n  render() {\n    const image = this.props.details && this.props.details.image;\n    const name = this.props.details && this.props.details.name;\n    const price = this.props.details && this.props.details.price;\n    const desc = this.props.details && this.props.details.desc;\n    const status = this.props.details && this.props.details.status;\n\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          onClick={() => this.props.addToOrder(this.props.index)}\n          disabled={!isAvailable}\n        >\n          {isAvailable ? 'Add to Cart' : 'Sold Out!'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport Fish from './Fish';\nimport sampleFishes from '../sample-fishes';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // First reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(\n      params.storeId,\n      JSON.stringify(this.state.order),\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    //1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    //2. Add our new fish to fishes\n    fishes[`fish${Date.now()}`] = fish;\n    //3. Set the new fishes object to state\n    this.setState({\n      fishes,\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    //1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    //2. Update the state\n    fishes[key] = updatedFish;\n    //3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    //1. Take a copy of state\n    const fishes = { ...this.state.fishes };\n    //2. Update state\n    fishes[key] = null;\n    //3. Update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes,\n    });\n  };\n\n  addToOrder = (key) => {\n    // 1. Take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to order or increment amount\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    // 1. Take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to order or increment amount\n    delete order[key];\n    // 3. Call setState to update state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              ></Fish>\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!</h2>\n    </div>\n)\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","// let's go!\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}